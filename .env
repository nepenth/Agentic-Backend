# =============================================================================
# AGENTIC BACKEND ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and update the values according to your setup
#
# IMPORTANT: Change all default passwords and keys before production use!
# =============================================================================

# -----------------------------------------------------------------------------
# üóÑÔ∏è DATABASE CONFIGURATION
# -----------------------------------------------------------------------------
# PostgreSQL database connection with pgvector support
# Format: postgresql+asyncpg://username:password@host:port/database_name
DATABASE_URL=postgresql+asyncpg://postgres:secret@db:5432/ai_db
# For local script execution outside Docker, use: localhost:5432
#DATABASE_URL=postgresql+asyncpg://postgres:secret@localhost:5432/ai_db


# Alternative for local development (if running PostgreSQL locally):
# DATABASE_URL=postgresql+asyncpg://postgres:secret@localhost:5432/ai_db

# -----------------------------------------------------------------------------
# üîÑ REDIS CONFIGURATION  
# -----------------------------------------------------------------------------
# Redis is used for Celery task queuing and real-time log streaming
REDIS_URL=redis://redis:6379/0
CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# Alternative for local development (if running Redis locally):
# REDIS_URL=redis://localhost:6379/0
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/0

# -----------------------------------------------------------------------------
# ü§ñ OLLAMA CONFIGURATION
# -----------------------------------------------------------------------------
# Ollama server connection - UPDATE THIS to match your Ollama installation
OLLAMA_BASE_URL=http://whyland-ai.nakedsun.xyz:11434

# Default model to use for tasks (ensure this model is available in Ollama)
# Updated to use the advanced Qwen3 model for better performance
OLLAMA_DEFAULT_MODEL=qwen3:30b-a3b-thinking-2507-q8_0

# Other common model options:
# OLLAMA_DEFAULT_MODEL=llama2
# OLLAMA_DEFAULT_MODEL=codellama
# OLLAMA_DEFAULT_MODEL=mistral
# OLLAMA_DEFAULT_MODEL=neural-chat

# Examples for different setups:
# Local Ollama: http://localhost:11434
# Docker Ollama: http://ollama:11434 (if running Ollama in Docker)
# Remote Ollama: http://your-server-ip:11434

# -----------------------------------------------------------------------------
# üîê SECURITY CONFIGURATION
# -----------------------------------------------------------------------------
# CRITICAL: Change these values immediately!

# Secret key for JWT tokens and cryptographic operations
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-secret-key-here

# Optional API key for endpoint authentication
# If set, API requests must include: Authorization: Bearer your-api-key
# Leave empty to disable API key authentication
API_KEY=

# JWT Authentication Configuration
# Algorithm used for JWT token signing (HS256 is recommended)
JWT_ALGORITHM=HS256

# JWT token expiration time in minutes (default: 30 minutes)
# Shorter times are more secure but require more frequent logins
ACCESS_TOKEN_EXPIRE_MINUTES=120

# Examples of secure keys:
# SECRET_KEY=f8d9e7a6b5c4d3e2f1a0b9c8d7e6f5a4b3c2d1e0f9e8d7c6b5a4
# API_KEY=sk-1234567890abcdef1234567890abcdef

# -----------------------------------------------------------------------------
# üìä APPLICATION SETTINGS
# -----------------------------------------------------------------------------
# Application metadata
APP_NAME=Agentic Backend
APP_VERSION=0.1.0

# Debug mode - DISABLE in production!
DEBUG=false

# Logging configuration
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# Log file path (optional) - logs will be written here in addition to console
LOG_FILE=/app/logs/app.log
# Leave empty to disable file logging: LOG_FILE=

# -----------------------------------------------------------------------------
# ‚ö° CELERY WORKER CONFIGURATION
# -----------------------------------------------------------------------------
# Number of concurrent worker processes
# Adjust based on your server's CPU cores (typically 2-4 per core)
CELERY_WORKER_CONCURRENCY=4

# Task timeout in seconds (5 minutes default)
# Increase for long-running AI tasks
CELERY_TASK_TIMEOUT=3000

# Worker memory management (uncomment if needed)
# CELERY_WORKER_MAX_MEMORY_PER_CHILD=200000  # KB (200MB)

# -----------------------------------------------------------------------------
# üåä REDIS STREAMS CONFIGURATION
# -----------------------------------------------------------------------------
# Real-time log streaming settings

# Name of the Redis Stream for logs
LOG_STREAM_NAME=agent_logs

# Maximum number of log entries to keep in stream
# Older entries are automatically removed (FIFO)
LOG_STREAM_MAX_LEN=10000

# Consumer group settings (advanced)
# LOG_CONSUMER_GROUP=log_processors
# LOG_CONSUMER_NAME=worker-1

# -----------------------------------------------------------------------------
# üê≥ DOCKER-SPECIFIC SETTINGS
# -----------------------------------------------------------------------------
# These are primarily used in docker-compose.yml but can be overridden

# Database settings for Docker
POSTGRES_DB=ai_db
POSTGRES_USER=postgres
POSTGRES_PASSWORD=secret

# Uncomment and modify for custom database credentials:
# POSTGRES_PASSWORD=your-secure-password-here

# -----------------------------------------------------------------------------
# üìà MONITORING AND OBSERVABILITY
# -----------------------------------------------------------------------------
# Prometheus metrics settings
METRICS_ENABLED=true

# Health check intervals (seconds)
HEALTH_CHECK_INTERVAL=30

# Log retention (days) - logs older than this will be cleaned up
LOG_RETENTION_DAYS=7

# -----------------------------------------------------------------------------
# üîß DEVELOPMENT SETTINGS
# -----------------------------------------------------------------------------
# Only enable these for development/testing

# Enable SQL query logging (verbose!)
# SQL_ECHO=false

# Enable request tracing
# TRACE_REQUESTS=false

# Hot reload for development (automatically enabled in docker-compose.dev.yml)
# RELOAD=true

# -----------------------------------------------------------------------------
# üåç NETWORK CONFIGURATION
# -----------------------------------------------------------------------------
# Host and port configuration (usually handled by Docker)
HOST=0.0.0.0
PORT=8000

# CORS settings (adjust for production)
CORS_ORIGINS=*
# For production, specify allowed origins:
# CORS_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# -----------------------------------------------------------------------------
# üíæ BACKUP AND MAINTENANCE
# -----------------------------------------------------------------------------
# Automatic cleanup settings

# Enable automatic log cleanup
AUTO_CLEANUP_ENABLED=true

# Cleanup schedule (cron format: minute hour day month weekday)
CLEANUP_SCHEDULE=0 2 * * *  # Daily at 2 AM

# -----------------------------------------------------------------------------
# üìù EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# -----------------------------------------------------------------------------

# LOCAL DEVELOPMENT:
# DATABASE_URL=postgresql+asyncpg://postgres:secret@localhost:5432/ai_db
# REDIS_URL=redis://localhost:6379/0
# OLLAMA_BASE_URL=http://localhost:11434
# DEBUG=true
# LOG_LEVEL=DEBUG

# PRODUCTION:
# DATABASE_URL=postgresql+asyncpg://user:secure_pass@prod-db:5432/ai_prod
# SECRET_KEY=super-secure-random-key-64-characters-long
# API_KEY=production-api-key
# DEBUG=false
# LOG_LEVEL=INFO
# CELERY_WORKER_CONCURRENCY=8

# DOCKER SWARM/KUBERNETES:
# Use Docker secrets or Kubernetes ConfigMaps/Secrets instead of .env files

# =============================================================================
# END OF CONFIGURATION
# =============================================================================